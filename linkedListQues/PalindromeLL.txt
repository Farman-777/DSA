#include <iostream>
#include<stdlib.h>
using namespace std;
struct node {
    int data;
    node *next;
};

node *head=NULL;

void insertAtfirstSLL(int x){
node *n = new node;
n->data=x;
n->next=head;
head=n;
cout<<"Node inserted at first : "<<x<<endl;

}

void showSLL(node *head){
    cout<<"linked list : ";
    node *temp=head;
    while(temp!=NULL){ cout<<temp->data<<" "; temp=temp->next; }
}


node *mid(node *head){
    node *slow=head;
    node *fast=head;
    while(fast!=NULL && fast->next!=NULL){
        slow=slow->next;
        fast=fast->next->next;
    }
   // cout<<"Mid node of linked list is : "<<slow->data;
    return slow;
}

node *reverse(node *head){
    if(head==NULL || head->next==NULL){ return head; }
    node *NewHead=reverse(head->next);
    head->next->next=head;
    head->next=NULL;
    return NewHead;
}
bool Palindrome(node *head){
    if(head==NULL){ return true; }
    node *Mid=mid(head);
    node *last=reverse(Mid->next);
    node *curr=head;
    while(last!=NULL){
    if(curr->data!=last->data){ return false; }
        last=last->next;
        curr=curr->next;
    }
    return true;
}


int main()
{
   insertAtfirstSLL(10);
   insertAtfirstSLL(20);
   insertAtfirstSLL(30);
   insertAtfirstSLL(30);
   insertAtfirstSLL(10);cout<<endl;
   showSLL(head);cout<<"\n";

  cout<<endl;
  if(Palindrome(head)) { cout<<"Yes It Is A Palindrome Linked list\n"; }
  else { showSLL(head);cout<<"\n"; cout<<"It Is Not A Palindrome Linked list\n"; }
  
   
    return 0;
}